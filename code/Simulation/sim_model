#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jun 12 13:02:14 2019

@author: ranap
"""
import numpy as np
import math

def brownian(d,v,sigma,t_bin=0.01):
    pos= 0
    t= 0
    v_t = v*t_bin
    while pos < d:
        pos = pos + v_t + (sigma * np.random.randn() * math.sqrt(t_bin))
        t+=1
    return t * t_bin

def eq1s4(t2,t3,t4,T):
    arr = np.array([t2,t3,t4,0])
    arr = np.sort(arr, axis=None)
    a= bool(np.heaviside (np.absolute(arr[2] -arr[1])- T, 0)) and bool((np.heaviside(np.absolute(arr[3] -arr[2])- T, 0)))
    return a
        
def sim():
    d=10; v=1; sigma=0.5; T=1;
    
    t1 = brownian(d,v,sigma)
    t2 = brownian(d,v,sigma)
    t3 = brownian(d,v,sigma)
    
    s4 = eq1s4(t1,t2,t3,T)
    return(s4)        

   
def main():
    
    no_sim=1000
    s4_count = 0
    for i in range(1,no_sim):
        if sim() == True:
            s4_count += 1
    s4_prob = s4_count/no_sim
    print(s4_prob)
    
main()